plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '2.7.17'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id("com.palantir.docker") version "0.35.0"
    id 'com.palantir.docker-compose' version '0.35.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
docker {
    name 'myrepository/dicom-bridge:0.0.1-SNAPSHOT-plain'
    buildArgs(['WAR_FILE': "build/libs/dicom-bridge-0.0.1-SNAPSHOT-plain.war"])
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    /* Servlet */
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.69'

    /* JSP */
    implementation 'javax.servlet:jstl:1.2'
    implementation 'taglibs:standard:1.1.2'

    /* JPA */
    implementation 'com.oracle.database.jdbc:ojdbc8'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    /* dcm4che */
    implementation fileTree(dir: '../dcm4che-5.31.0/lib')

    /* JCIFS */
    implementation 'eu.agno3.jcifs:jcifs-ng:2.1.7'

    implementation  'org.springframework.boot:spring-boot-devtools'

    /* Test */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'

    /* DevTools */
    implementation  'org.springframework.boot:spring-boot-devtools'

    /* commons-io */
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'

    /* download */
    implementation 'net.lingala.zip4j:zip4j:2.8.0'

    /* redis */
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'redis.clients:jedis:5.0.2'

    /* JUnit */
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

war {
    enabled = true
    duplicatesStrategy = 'exclude'
}

bootWar {
    duplicatesStrategy = 'exclude'
}

dockerCompose {
    dockerComposeFile 'docker-compose.yml'
}